/usr/local/python3/lib/python3.4/site-packages/celery/platforms.py:812: RuntimeWarning: You are running the worker with superuser privileges, which is
absolutely not recommended!

Please specify a different user using the -u option.

User information: uid=0 euid=0 gid=0 egid=0

  uid=uid, euid=euid, gid=gid, egid=egid,
[2018-06-12 16:34:09,932: WARNING/MainProcess] /usr/local/python3/lib/python3.4/site-packages/celery/apps/worker.py:161: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))
[2018-06-12 16:34:10,004: INFO/MainProcess] Connected to amqp://guest:**@127.0.0.1:5672//
[2018-06-12 16:34:10,015: INFO/MainProcess] mingle: searching for neighbors
[2018-06-12 16:34:11,024: INFO/MainProcess] mingle: all alone
[2018-06-12 16:34:11,043: WARNING/MainProcess] /usr/local/python3/lib/python3.4/site-packages/djcelery/loaders.py:133: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '
[2018-06-12 16:34:11,043: WARNING/MainProcess] celery@host1 ready.

worker: Hitting Ctrl+C again will terminate all running tasks!

worker: Warm shutdown (MainProcess)

worker: Cold shutdown (MainProcess)

worker: Cold shutdown (MainProcess)
[2018-06-12 16:34:12,054: WARNING/MainProcess] Error in atexit._run_exitfuncs:
[2018-06-12 16:34:12,055: WARNING/MainProcess] Traceback (most recent call last):
[2018-06-12 16:34:12,055: WARNING/MainProcess] File "/usr/local/python3/lib/python3.4/multiprocessing/util.py", line 252, in _run_finalizers
[2018-06-12 16:34:12,056: WARNING/MainProcess] finalizer()
[2018-06-12 16:34:12,056: WARNING/MainProcess] File "/usr/local/python3/lib/python3.4/multiprocessing/util.py", line 185, in __call__
[2018-06-12 16:34:12,056: WARNING/MainProcess] res = self._callback(*self._args, **self._kwargs)
[2018-06-12 16:34:12,057: WARNING/MainProcess] File "/usr/local/python3/lib/python3.4/site-packages/billiard/pool.py", line 1572, in _terminate_pool
[2018-06-12 16:34:12,058: WARNING/MainProcess] cls._help_stuff_finish(*help_stuff_finish_args)
[2018-06-12 16:34:12,058: WARNING/MainProcess] File "/usr/local/python3/lib/python3.4/site-packages/celery/concurrency/asynpool.py", line 1259, in _help_stuff_finish
[2018-06-12 16:34:12,059: WARNING/MainProcess] readable, _, again = _select(inqR, timeout=0.5)
[2018-06-12 16:34:12,059: WARNING/MainProcess] File "/usr/local/python3/lib/python3.4/site-packages/celery/concurrency/asynpool.py", line 141, in _select
[2018-06-12 16:34:12,060: WARNING/MainProcess] r, w, e = select.select(readers, writers, err, timeout)
[2018-06-12 16:34:12,060: WARNING/MainProcess] File "/usr/local/python3/lib/python3.4/site-packages/celery/apps/worker.py", line 293, in _handle_request
[2018-06-12 16:34:12,061: WARNING/MainProcess] raise exc()
[2018-06-12 16:34:12,061: WARNING/MainProcess] celery.exceptions
[2018-06-12 16:34:12,061: WARNING/MainProcess] .
[2018-06-12 16:34:12,061: WARNING/MainProcess] WorkerTerminate
 
 -------------- celery@host1 v3.1.26.post2 (Cipater)
---- **** ----- 
--- * ***  * -- Linux-2.6.32-431.el6.x86_64-x86_64-with-centos-6.5-Final
-- * - **** --- 
- ** ---------- [config]
- ** ---------- .> app:         default:0x7f23f2eed470 (djcelery.loaders.DjangoLoader)
- ** ---------- .> transport:   amqp://guest:**@localhost:5672//
- ** ---------- .> results:     amqp://
- *** --- * --- .> concurrency: 2 (prefork)
-- ******* ---- 
--- ***** ----- [queues]
 -------------- .> celery           exchange=celery(direct) key=celery
                

[tasks]
  . build_jenkins.tasks.build
  . celery_task.tasks.add

